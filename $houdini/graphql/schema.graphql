
enum CachePolicy {
	CacheAndNetwork
	CacheOnly
	CacheOrNetwork
	NetworkOnly
}

"""
	@list is used to mark a field for the runtime as a place to add or remove
	entities in mutations
"""
directive @list(name: String!, connection: Boolean) on FIELD

"""
	@paginate is used to to mark a field for pagination.
	More info in the [doc](https://houdinigraphql.com/guides/pagination).
"""
directive @paginate(name: String) on FIELD

"""
	@prepend is used to tell the runtime to add the result to the end of the list
"""
directive @prepend on FRAGMENT_SPREAD

"""
	@append is used to tell the runtime to add the result to the start of the list
"""
directive @append on FRAGMENT_SPREAD

"""
	@allLists is used to tell the runtime to add the result to all list
"""
directive @allLists on FRAGMENT_SPREAD

"""
	@parentID is used to provide a parentID without specifying position or in situations
	where it doesn't make sense (eg when deleting a node.)
"""
directive @parentID(value: ID!) on FRAGMENT_SPREAD


"""
	@when is used to provide a conditional or in situations where it doesn't make sense (eg when removing or deleting a node.)
"""
directive @when on FRAGMENT_SPREAD

"""
	@when_not is used to provide a conditional or in situations where it doesn't make sense (eg when removing or deleting a node.)
"""
directive @when_not on FRAGMENT_SPREAD

"""
	@arguments is used to define the arguments of a fragment
"""
directive @arguments on FRAGMENT_DEFINITION

"""
	@with is used to provide arguments to fragments that have been marked with @arguments
"""
directive @with on FRAGMENT_SPREAD

"""
	@cache is used to specify cache rules for a query
"""
directive @cache(policy: CachePolicy, partial: Boolean) on QUERY

"""
	@load is used to disable automatic fetch (no load, no auto fetch in component), you will have to do it manually.
"""
directive @load on QUERY

"""
	@mask_enable to enable masking on fragment (overwriting the global conf)
"""
directive @mask_enable on FRAGMENT_SPREAD

"""
	@mask_disable to disable masking on fragment (overwriting the global conf)
"""
directive @mask_disable on FRAGMENT_SPREAD
